{"version":3,"sources":["../src/index.tsx"],"names":["noop","_id","generateId","SimpleMDEEditor","props","state","keyChange","value","id","simpleMde","editorEl","editorToolbarEl","createEditor","SimpleMDE","require","initialOptions","element","document","getElementById","initialValue","allOptions","Object","assign","options","eventWrapper","setState","onChange","removeEvents","removeEventListener","addEvents","wrapperId","wrapperEl","getElementsByClassName","addEventListener","codemirror","on","getCursor","events","entries","forEach","eventName","callback","getLineAndCursor","getMdeInstance","addExtraKeys","extraKeys","setOption","window","undefined","prevProps","children","label","rest","React","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as SimpleMDE from \"simplemde\";\nimport { KeyMap, DOMEvent, Editor } from \"codemirror\";\n\nconst noop = () => {};\nlet _id = 0;\n\nconst generateId = () => `simplemde-editor-${++_id}`;\n\ntype CodemirrorEvents =\n  | \"change\"\n  | \"changes\"\n  | \"beforeChange\"\n  | \"cursorActivity\"\n  | \"beforeSelectionChange\"\n  | \"viewportChange\"\n  | \"gutterClick\"\n  | \"focus\"\n  | \"blur\"\n  | \"scroll\"\n  | \"update\"\n  | \"renderLine\";\n\ntype SimpleMdeToCodemirror = {\n  [E in CodemirrorEvents | DOMEvent]: Editor[\"on\"]\n};\n\ntype SimpleMDEEditorProps = {\n  id?: string;\n  label?: string;\n  onChange: (value: string) => void | any;\n  value?: string;\n  className?: string;\n  extraKeys?: KeyMap;\n  options?: SimpleMDE.Options;\n  events?: SimpleMdeToCodemirror;\n  getMdeInstance?: (instance: SimpleMDE) => void | any;\n  getLineAndCursor?: (instance: SimpleMDE) => void | any;\n};\n\ntype SimpleMDEEditorState = {\n  keyChange: boolean;\n  value: string;\n};\n\nexport default class SimpleMDEEditor extends React.PureComponent<\n  SimpleMDEEditorProps,\n  SimpleMDEEditorState\n> {\n  static defaultProps = {\n    events: {},\n    onChange: noop,\n    options: {}\n  };\n\n  state = {\n    keyChange: false,\n    value: this.props.value || \"\"\n  };\n\n  id = this.props.id ? this.props.id : generateId();\n  simpleMde: SimpleMDE | null = null;\n  editorEl: Element | null = null;\n  editorToolbarEl: Element | null = null;\n\n  constructor(props: SimpleMDEEditorProps) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (typeof window !== undefined) {\n      this.createEditor();\n      this.addEvents();\n      this.addExtraKeys();\n      this.getCursor();\n      this.getMdeInstance();\n    }\n  }\n\n  componentDidUpdate(prevProps: SimpleMDEEditorProps) {\n    if (\n      !this.state.keyChange &&\n      this.props.value !== this.state.value && // This is somehow fixes moving cursor for controlled case\n      this.props.value !== prevProps.value // This one fixes no value change for uncontrolled input. If it's uncontrolled prevProps will be the same\n    ) {\n      this.simpleMde!.value(this.props.value || \"\");\n    }\n    this.setState({\n      keyChange: false\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeEvents();\n  }\n\n  createEditor = () => {\n    const SimpleMDE = require(\"simplemde\");\n    const initialOptions = {\n      element: document.getElementById(this.id),\n      initialValue: this.props.value\n    };\n\n    const allOptions = Object.assign({}, initialOptions, this.props.options);\n    this.simpleMde = new SimpleMDE(allOptions);\n  };\n\n  eventWrapper = () => {\n    this.setState({\n      keyChange: true,\n      value: this.simpleMde!.value()\n    });\n    this.props.onChange(this.simpleMde!.value());\n  };\n\n  removeEvents = () => {\n    this.editorEl!.removeEventListener(\"keyup\", this.eventWrapper);\n    this.editorEl!.removeEventListener(\"paste\", this.eventWrapper);\n    this.editorToolbarEl &&\n      this.editorToolbarEl.removeEventListener(\"click\", this.eventWrapper);\n  };\n\n  addEvents = () => {\n    const wrapperId = `${this.id}-wrapper`;\n    const wrapperEl = document.getElementById(`${wrapperId}`);\n\n    this.editorEl = wrapperEl!.getElementsByClassName(\"CodeMirror\")[0];\n    this.editorToolbarEl = wrapperEl!.getElementsByClassName(\n      \"editor-toolbar\"\n    )[0];\n\n    this.editorEl.addEventListener(\"keyup\", this.eventWrapper);\n    this.editorEl.addEventListener(\"paste\", this.eventWrapper);\n    this.editorToolbarEl &&\n      this.editorToolbarEl.addEventListener(\"click\", this.eventWrapper);\n\n    this.simpleMde!.codemirror.on(\"cursorActivity\", this.getCursor);\n\n    const { events } = this.props;\n\n    // Handle custom events\n    events &&\n      Object.entries(events).forEach(([eventName, callback]) => {\n        if (eventName && callback) {\n          this.simpleMde!.codemirror.on(eventName, callback);\n        }\n      });\n  };\n\n  getCursor = () => {\n    // https://codemirror.net/doc/manual.html#api_selection\n    if (this.props.getLineAndCursor) {\n      this.props.getLineAndCursor(this.simpleMde!.codemirror.getCursor());\n    }\n  };\n\n  getMdeInstance = () => {\n    if (this.props.getMdeInstance) {\n      this.props.getMdeInstance(this.simpleMde!);\n    }\n  };\n\n  addExtraKeys = () => {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (this.props.extraKeys) {\n      this.simpleMde!.codemirror.setOption(\"extraKeys\", this.props.extraKeys);\n    }\n  };\n\n  render() {\n    const {\n      events,\n      value,\n      options,\n      children,\n      extraKeys,\n      getLineAndCursor,\n      getMdeInstance,\n      label,\n      onChange,\n      id,\n      ...rest\n    } = this.props;\n    return (\n      <div id={`${this.id}-wrapper`} {...rest}>\n        {label && <label htmlFor={this.id}> {label} </label>}\n        <textarea id={this.id} />\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}